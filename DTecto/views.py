from django.shortcuts import render
from django.http import HttpResponse
from .forms import SoftwareForms
import os
import tensorflow as tf
from tensorflow.keras.preprocessing.text import Tokenizer

def handle_uploaded_file(f):
    with open('DTecto/Upload/'+f.name,'wb+') as destination:
        for chunk in f.chunks():
            destination.write(chunk)

def Predictor(request):
    if request.method == 'POST':
        software = SoftwareForms(request.POST, request.FILES)
        if software.is_valid():
            handle_uploaded_file(request.FILES['file'])
            for root, dirs, files in os.walk(r"DTecto\Upload"):
                file = files[-1]
                if(file.endswith('.c')):
                    with open(os.path.join(root,file),encoding='latin1') as f:
                        data = f.readlines()
                        tokenizer = tf.keras.preprocessing.text.Tokenizer(num_words=1000)
                        data_tokenized = tokenizer.texts_to_sequences(data)
                        given_data = tf.keras.preprocessing.sequence.pad_sequences(data_tokenized,maxlen=300,padding='post')
                        gru_model = tf.keras.models.load_model('Model\GRU_Model')
                        print(gru_model.summary())
                        print(gru_model.predict(given_data))
                    os.unlink(os.path.join(root, file))
            software = SoftwareForms()
            return render(request, 'vulnerability.html', {'form':software})
    else:
        software = SoftwareForms()
    return render(request,'vulnerability.html',{'form':software})
# Create your views here.
