from django.shortcuts import render
from django.http import HttpResponse
from .forms import SoftwareForms
import os
import tensorflow as tf
# from tensorflow.keras.preprocessing.text import Tokenizer
import pickle

def handle_uploaded_file(f):
    with open('DTecto/Upload/'+f.name,'wb+') as destination:
        for chunk in f.chunks():
            destination.write(chunk)

def Predictor(request):
    message = ''
    if request.method == 'POST':
        software = SoftwareForms(request.POST, request.FILES)
        if software.is_valid():
            handle_uploaded_file(request.FILES['file'])
            given_data = []
            for root, dirs, files in os.walk(r"DTecto\Upload"):
                for file in files:
                    if(file.endswith('.c')):
                        with open(os.path.join(root,file),encoding='latin1') as f:
                            data = f.readlines()
                            given_data.append(data)
                            print(f"Given Data : {given_data}")
                            with open('Model\Tokenizer.pickle','rb') as tokenized_data:
                                tokenizer = pickle.load(tokenized_data)
                            data_tokenized = tokenizer.texts_to_sequences(given_data)
                            x_test = tf.keras.preprocessing.sequence.pad_sequences(data_tokenized, maxlen=300, padding="post")
                            # given_data = tf.keras.preprocessing.sequence.pad_sequences(data_tokenized,maxlen=300,padding='post')
                            blstm_model = tf.keras.models.load_model('Model\BLSTM_Model')
                            # print(given_data)
                            y_pred = blstm_model.predict(x_test)[0]
                            if(y_pred<0.5):
                                message = f'{file} is not prone to vulnerabilities'
                            else:
                                message = f'{file} is prone to vulnerabilities'
                        os.unlink(os.path.join(root,file))
                
            software = SoftwareForms()
            return render(request, 'vulnerability.html', {'form':software,'message':message})
    else:
        software = SoftwareForms()
    return render(request,'vulnerability.html',{'form':software,'message':message})
# Create your views here.
